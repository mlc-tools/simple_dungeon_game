
class Request:visitor
{
    function Response* execute():server:abstract;
}

class RequestOpenTile<Request>
{
    int index

    function Response* execute():server
    {
        auto response = make_intrusive<ResponseTileChangedState>();
        response->index = this->index;
        response->state = TileState::open;
        return response;
    }
}

class RequestRewardFromTile<Request>
{
    int index

    function Response* execute():server
    {
        auto data = DataStorage::shared().get<DataLevel>("0");
        auto tile = data->tiles[this->index];
        auto response = make_intrusive<ResponseTileReward>();
        response->index = this->index;
        response->gold = tile->object->reward_gold;
        response->new_object = tile->object->next;
        return response;
    }
}

class Response:visitor
{
}

class ResponseTileChangedState<Response>
{
    int index
    TileState state
}

class ResponseTileReward<Response>
{
    int index
    DataGameObject*:link new_object
    int gold
}